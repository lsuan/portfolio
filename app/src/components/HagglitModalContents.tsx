import React, { useRef } from "react";
import "../styles/modal-contents.scss";
 
function HagglitModalContents() {
  const slide1Ref = useRef(null);
  const slide2Ref = useRef(null);
  const slide3Ref = useRef(null);
  const indicatorsRef = useRef(null);
  
  // fix for when height changes on next slide
  // function handleIndicatorPosition() {
  //   const windowHeight = window.outerHeight;
  //   const modalHeight = document.querySelector("#hagglit-modal .modal-content").clientHeight;
  //   const top = (windowHeight / 2) + (modalHeight / 2);
  //   indicatorsRef.current.style.top = top + "px";
  //   console.log("hi");
  // }
  
  return (
    <div id="hagglitCarousel" className="carousel slide carousel-fade d-flex align-items-center w-100">
      <div className="carousel-inner py-3">
        <div className="carousel-indicators">
          <button type="button" data-bs-target="#hagglitCarousel" data-bs-slide-to="0" className="active bi bi-1-circle" aria-current="true" aria-label="All Commands Slide"></button>
          <button type="button" data-bs-target="#hagglitCarousel" data-bs-slide-to="1" className="bi bi-2-circle" aria-label="Greeing + Collection Commands Slide"></button>
          <button type="button" data-bs-target="#hagglitCarousel" data-bs-slide-to="2" className="bi bi-3-circle" aria-label="Project Commands Slide"></button>
          <button type="button" data-bs-target="#hagglitCarousel" data-bs-slide-to="3" className="bi bi-4-circle" aria-label="Implementing Twitter API Slide"></button>
          <button type="button" data-bs-target="#hagglitCarousel" data-bs-slide-to="4" className="bi bi-5-circle" aria-label="Fun Commands Slide"></button>
          <button type="button" data-bs-target="#hagglitCarousel" data-bs-slide-to="5" className="bi bi-6-circle" aria-label="Error Handling"></button>
        </div>
        <button className="carousel-control-prev w-auto" type="button" data-bs-target="#hagglitCarousel" data-bs-slide="prev">
          <span className="carousel-control-prev-icon fa-solid fa-angle-left" aria-hidden="true"></span>
          <span className="visually-hidden">Previous</span>
        </button>
        <button className="carousel-control-next w-auto" type="button" data-bs-target="#hagglitCarousel" data-bs-slide="next">
          <span className="carousel-control-next-icon fa-solid fa-angle-right" aria-hidden="true"></span>
          <span className="visually-hidden">Next</span>
        </button>
        <div className="carousel-item d-flex align-items-center active">
          <img src={require("../assets/hagglit-contents/all-commands.png")} alt="All Commands" loading="lazy"/>
          <div className="carousel-caption">
            <div className="content-title">
              ALL COMMANDS
            </div>
            <div className="content-description mt-2">
              These are the list of commands that are generated by the <strong>~help</strong> command.
              <br />
              <div className="disclaimer mt-2">
                <i className="bi bi-exclamation-circle-fill mb-2 me-2"/>
                Some parts of the following screenshots have been covered for privacy.
              </div>
          </div>
          </div>
        </div>
        <div className="carousel-item">
          <img src={require("../assets/hagglit-contents/greeting-collection.png")} alt="Greeting and Collection Commands" loading="lazy"/>
          <div className="carousel-caption">
            <div className="content-title">
              GREETING + COLLECTION COMMANDS
            </div>
            <div className="content-description mt-2">
              Each member in the server has their own collection of "greetings".
              Every time someone uses their daily greeting, that data is saved to the corresponding worksheets.
            </div>
          </div>
        </div>
        <div className="carousel-item">
          <img src={require("../assets/hagglit-contents/projects.png")} alt="Project Commands" loading="lazy"/>
          <div className="carousel-caption">
            <div className="content-title">
              PROJECT COMMANDS
            </div>
            <div className="content-description mt-2">
              The <strong>~add_project</strong> command adds a new project to the Projects Sheet.
            </div>
          </div>
        </div>
        <div className="carousel-item">
          <img src={require("../assets/hagglit-contents/twitter-api.png")} alt="Implementing Twitter API" loading="lazy"/>
          <div className="carousel-caption">
            <div className="content-title">
              USING TWITTER API TO GET TWEET DATA
            </div>
            <div className="content-description mt-2">
              The <strong>~get_project_analytics</strong> command currently reads Twitter API to get metrics for a specific project that was posted.
            </div>
          </div>
        </div>
        <div className="carousel-item">
          <img src={require("../assets/hagglit-contents/fun-commands.png")} alt="Miscellaneous Commands" loading="lazy"/>
          <div className="carousel-caption">
            <div className="content-title">
              MISCELLANEOUS FUN COMMANDS
            </div>
            <div className="content-description mt-2">
              The <strong>~menpa</strong> command randomly returns a yes, no, or try again answer when asked a question with puns of song lyrics.
              The <strong>~slaygend</strong> command randomly returns a number from 0-100 representing how much "slay" someone has.
            </div>
          </div>
        </div>
        <div className="carousel-item">
          <img src={require("../assets/hagglit-contents/error-handling.png")} alt="Error Handling" loading="lazy"/>
          <div className="carousel-caption">
            <div className="content-title">
              ERROR HANDLING
            </div>
            <div className="content-description mt-2">
              In the case when someone doesn't input the right amount of arguments to a command or something wrong happens as a command runs, an error message is sent back.
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
 
export default HagglitModalContents;

